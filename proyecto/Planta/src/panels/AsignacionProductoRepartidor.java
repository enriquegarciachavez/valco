/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import components.BarCodeArea;
import components.BasculaPanel;
import components.CustomCellRendered;
import components.CustomDropDown;
import components.ProductosTableModel;
import dao.ProductoDAO;
import dao.ProductosHasProveedoresDao;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import mapping.Productos;
import mapping.ProductosHasProveedores;
import mapping.ProductosInventario;
import mapping.Proveedores;
import mapping.Repartidores;
import observers.BarCodeAreaObserver;
import pesable.PesableBarCodeable;
import service.BasculaService;
import service.ProductosService;
import service.TransactionService;
import utilities.UsuarioFirmado;

/**
 *
 * @author Administrador
 */
public class AsignacionProductoRepartidor extends PesableBarCodeable implements BarCodeAreaObserver {

    private ProductosTableModel model;
    private CustomCellRendered cellRendered;
    private List<ProductosInventario> productos = new ArrayList<>();
    private String modoOperacion;
    private CustomDropDown proveedoresDropDown;
    private CustomDropDown productosDropDown;
    private CustomDropDown repartidoresDropDown;
    private BarCodeArea barCodeArea;
    private BasculaPanel basculaPanel;
    private ProductoDAO productoDAO;
    private ProductosHasProveedoresDao pHasPro;
    private BasculaService basculaService;
    private ProductosService productosService;
    private TransactionService transactionService;
    private String letra;
    private boolean inventarioInicial;

    /**
     * Creates new form AsignacionProductoRepartidor
     */
    public AsignacionProductoRepartidor(String modoOperacion) {
        this.modoOperacion = modoOperacion;
    }

    public void init() {
        initComponents();
        PanelCodigoBarras.add(barCodeArea);
        barCodeArea.setModoOperacion(modoOperacion);
        barCodeArea.setProveedoresDropDown(proveedoresDropDown);
        barCodeArea.setBounds(10, 20, 700, 180);
        barCodeArea.setProductoExistente(true);
        barCodeArea.registerObserver(this);
        PanelPeso.add(basculaPanel);
        basculaPanel.setBounds(20, 25, 380, 120);
        PanelPeso.add(productosDropDown);
        productosDropDown.setBounds(420, 20, 300, 65);
        PanelRepartidor.add(repartidoresDropDown);
        repartidoresDropDown.setBounds(20, 20, 300, 65);
        panelProveedor.add(proveedoresDropDown);
        proveedoresDropDown.setBounds(20, 20, 300, 65);
        proveedoresDropDown.disable();
        tablaProductos.setDefaultRenderer(Object.class, (TableCellRenderer) cellRendered);
        tablaProductos.setModel((TableModel) model);
        if(inventarioInicial){
            PanelRepartidor.setVisible(false);
            noRadio.setSelected(inventarioInicial);
            panelExistente.setVisible(false);
            PanelFinalizar.setVisible(false);
            proveedoresDropDown.setEnabled(true);
            panelProveedor.setEnabled(true);
        }else{
            Proveedores valco = new Proveedores();
            valco.setCodigo(9999999);
            productosDropDown.filterByFather(valco);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Pesaje = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel4 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        eliminarCajaBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        PanelRepartidor = new javax.swing.JPanel();
        PanelCodigoBarras = new javax.swing.JPanel();
        PanelPeso = new javax.swing.JPanel();
        imprimirEtiquetaBtn = new javax.swing.JButton();
        imprimirEtiquetaBtn.setMnemonic(KeyEvent.VK_ENTER);
        PanelFinalizar = new javax.swing.JPanel();
        finalizarBtn = new javax.swing.JButton();
        panelExistente = new javax.swing.JPanel();
        yesRadio = new javax.swing.JRadioButton();
        noRadio = new javax.swing.JRadioButton();
        panelProveedor = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(200, 455));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        Pesaje.setPreferredSize(new java.awt.Dimension(1558, 455));
        Pesaje.setLayout(new javax.swing.BoxLayout(Pesaje, javax.swing.BoxLayout.LINE_AXIS));

        jSplitPane2.setDividerLocation(751);
        jSplitPane2.setMinimumSize(new java.awt.Dimension(30, 25));

        jPanel4.setPreferredSize(new java.awt.Dimension(922, 425));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jSplitPane1.setDividerLocation(55);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        eliminarCajaBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        eliminarCajaBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button_cancel-48.png"))); // NOI18N
        eliminarCajaBtn.setText("Eliminar");
        eliminarCajaBtn.setToolTipText("");
        eliminarCajaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarCajaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(eliminarCajaBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(eliminarCajaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(jPanel1);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane4.setViewportView(tablaProductos);

        jPanel2.add(jScrollPane4);

        jSplitPane1.setRightComponent(jPanel2);

        jPanel4.add(jSplitPane1);

        jSplitPane2.setRightComponent(jPanel4);

        jScrollPane2.setFocusCycleRoot(true);
        jScrollPane2.setMinimumSize(new java.awt.Dimension(631, 655));

        jPanel3.setMinimumSize(new java.awt.Dimension(629, 653));
        jPanel3.setPreferredSize(new java.awt.Dimension(629, 653));

        PanelRepartidor.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione el Repartidor"));

        javax.swing.GroupLayout PanelRepartidorLayout = new javax.swing.GroupLayout(PanelRepartidor);
        PanelRepartidor.setLayout(PanelRepartidorLayout);
        PanelRepartidorLayout.setHorizontalGroup(
            PanelRepartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelRepartidorLayout.setVerticalGroup(
            PanelRepartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        PanelCodigoBarras.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Ingrese el Codigo de Barras"));
        PanelCodigoBarras.setMinimumSize(new java.awt.Dimension(610, 78));
        PanelCodigoBarras.setName(""); // NOI18N
        PanelCodigoBarras.setPreferredSize(new java.awt.Dimension(584, 78));

        javax.swing.GroupLayout PanelCodigoBarrasLayout = new javax.swing.GroupLayout(PanelCodigoBarras);
        PanelCodigoBarras.setLayout(PanelCodigoBarrasLayout);
        PanelCodigoBarrasLayout.setHorizontalGroup(
            PanelCodigoBarrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelCodigoBarrasLayout.setVerticalGroup(
            PanelCodigoBarrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 192, Short.MAX_VALUE)
        );

        PanelPeso.setBorder(javax.swing.BorderFactory.createTitledBorder("Ã“ Seleccione y pese un producto"));
        PanelPeso.setPreferredSize(new java.awt.Dimension(584, 343));

        imprimirEtiquetaBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        imprimirEtiquetaBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Print-48.png"))); // NOI18N
        imprimirEtiquetaBtn.setText("Agregar");
        imprimirEtiquetaBtn.setToolTipText("");
        imprimirEtiquetaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirEtiquetaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPesoLayout = new javax.swing.GroupLayout(PanelPeso);
        PanelPeso.setLayout(PanelPesoLayout);
        PanelPesoLayout.setHorizontalGroup(
            PanelPesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPesoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imprimirEtiquetaBtn)
                .addContainerGap())
        );
        PanelPesoLayout.setVerticalGroup(
            PanelPesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPesoLayout.createSequentialGroup()
                .addContainerGap(77, Short.MAX_VALUE)
                .addComponent(imprimirEtiquetaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        PanelFinalizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Finalizar"));

        finalizarBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        finalizarBtn.setText("Finalizar");
        finalizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelFinalizarLayout = new javax.swing.GroupLayout(PanelFinalizar);
        PanelFinalizar.setLayout(PanelFinalizarLayout);
        PanelFinalizarLayout.setHorizontalGroup(
            PanelFinalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFinalizarLayout.createSequentialGroup()
                .addGap(229, 229, 229)
                .addComponent(finalizarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(357, Short.MAX_VALUE))
        );
        PanelFinalizarLayout.setVerticalGroup(
            PanelFinalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(finalizarBtn)
        );

        panelExistente.setBorder(javax.swing.BorderFactory.createTitledBorder("Â¿El producto ya existe en el inventario?"));

        buttonGroup1.add(yesRadio);
        yesRadio.setSelected(true);
        yesRadio.setText("Si");
        yesRadio.setFocusCycleRoot(true);
        yesRadio.setName("yes"); // NOI18N
        yesRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(noRadio);
        noRadio.setText("No");
        noRadio.setName("no"); // NOI18N
        noRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelExistenteLayout = new javax.swing.GroupLayout(panelExistente);
        panelExistente.setLayout(panelExistenteLayout);
        panelExistenteLayout.setHorizontalGroup(
            panelExistenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExistenteLayout.createSequentialGroup()
                .addComponent(yesRadio)
                .addGap(41, 41, 41)
                .addComponent(noRadio)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelExistenteLayout.setVerticalGroup(
            panelExistenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExistenteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelExistenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yesRadio)
                    .addComponent(noRadio))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        panelProveedor.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione un proveedor"));
        panelProveedor.setEnabled(false);
        panelProveedor.setName("panelProveedor"); // NOI18N
        panelProveedor.setPreferredSize(new java.awt.Dimension(612, 130));

        javax.swing.GroupLayout panelProveedorLayout = new javax.swing.GroupLayout(panelProveedor);
        panelProveedor.setLayout(panelProveedorLayout);
        panelProveedorLayout.setHorizontalGroup(
            panelProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );
        panelProveedorLayout.setVerticalGroup(
            panelProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelPeso, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                    .addComponent(panelExistente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelFinalizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(panelProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelRepartidor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(PanelCodigoBarras, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelExistente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(PanelRepartidor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(PanelPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        PanelCodigoBarras.getAccessibleContext().setAccessibleName("Ingrese los Codigos de Barras");

        jScrollPane2.setViewportView(jPanel3);

        jSplitPane2.setLeftComponent(jScrollPane2);

        Pesaje.add(jSplitPane2);

        add(Pesaje);
    }// </editor-fold>//GEN-END:initComponents

    private boolean isProductoRepetido(Collection<ProductosInventario> productos,
            ProductosInventario producto) {
        for (ProductosInventario prod : productos) {
            if (producto.equals(prod)) {
                return true;
            }
        }
        return false;
    }

    public void agregarProductoDeBascula() {
        ProductosInventario productoNuevo = new ProductosInventario();
        String peso = basculaPanel.getPeso().toString();

        if (noRadio.isSelected()) {
            ProductosInventario productoInventario = new ProductosInventario();
            productoInventario.setProductosHasProveedores(armarProductoHasProveedores());
            productoInventario.setUbicaciones(UsuarioFirmado.getUsuarioFirmado().getUbicaciones());
            productoInventario.setPeso(basculaPanel.getPeso());
            productoInventario.setPrecio(BigDecimal.ZERO);
            productoInventario.setEstatus("ACTIVO");
            productoInventario.setCodigoBarras(getCodigoBarras(peso));
            productoInventario.setFechaCreacion(new Date());
            productoInventario.setReetiquetado(false);
            try {
                productoDAO.insertarProducto(productoInventario);
                productos.add(productoInventario);
                model.agregarProducto(productoInventario);
                barCodeArea.getCodigos().add(productoInventario.getCodigo());
                imprimirCodigo(productoInventario);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex, "Error", ERROR_MESSAGE);
            }
        } else {
            try {
                if (modoOperacion.equals("ENTRADA")) {
                    productoNuevo = productoDAO.getProductoPesadoByEstatus(peso,
                            (Productos) productosDropDown.getSelectedItem(),
                            model.getProductos(), "TRANSITO");
                } else {
                    productoNuevo = productoDAO.getProductoPesadoByEstatus(peso,
                            (Productos) productosDropDown.getSelectedItem(),
                            model.getProductos(), "ACTIVO");
                }

            } catch (Exception ex) {
                System.out.println(ex.getMessage());
                return;
            }
            if (productoNuevo == null) {
                return;
            }
            if (isProductoRepetido(model.getProductos(), productoNuevo)) {
                return;
            }
            productos.add(productoNuevo);
            model.agregarProducto(productoNuevo);
            barCodeArea.getCodigos().add(productoNuevo.getCodigo());
        }
    }

    private ProductosHasProveedores armarProductoHasProveedores() {
        return productosService.armarProdHasProv((Productos)productosDropDown.getSelectedItem(),
                                                (Proveedores)proveedoresDropDown.getSelectedItem());
    }

    private String getCodigoBarras(String peso) {
        return basculaService.armarCodigoBarras(letra, 
                ((Productos)productosDropDown.getSelectedItem()).getCodigo(),
                Integer.parseInt(peso.replaceAll("\\.", "")),
                tablaProductos.getRowCount());
    }

    private void imprimirCodigo(ProductosInventario producto) {
        basculaService.imprimitCodigoBarras(productosDropDown.getSelectedItem().toString(),
                producto.getPeso().toString(), producto.getCodigoBarras());
        
    }

    private void finalizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarBtnActionPerformed
        try {
            transactionService.finalize(productos, (Repartidores) repartidoresDropDown.getSelectedItem(),
                                        modoOperacion);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            ex.printStackTrace();
            return;
        }
        JOptionPane.showMessageDialog(null, "La transacciÃ³n se terminÃ³ correctamente");
        limpiar();
    }//GEN-LAST:event_finalizarBtnActionPerformed

    private void imprimirEtiquetaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirEtiquetaBtnActionPerformed
        agregarProductoDeBascula();
    }//GEN-LAST:event_imprimirEtiquetaBtnActionPerformed

    private void eliminarCajaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarCajaBtnActionPerformed
        int[] selectedRows = tablaProductos.getSelectedRows();
        if (selectedRows.length > 0) {
            for (int i = selectedRows.length - 1; i >= 0; i--) {
                ProductosInventario productoSeleccionado = (ProductosInventario) model.getElementAt(selectedRows[i], 0);
                productos.remove(productoSeleccionado);
                barCodeArea.getCodigos().remove(i);
            }
            model.eliminarProductos(selectedRows);
        } else {
            JOptionPane.showMessageDialog(null, "No hay ningÃºna caja seleccionada.");
        }
    }//GEN-LAST:event_eliminarCajaBtnActionPerformed

    private void noRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noRadioActionPerformed
        panelProveedor.setEnabled(true);
        proveedoresDropDown.enable();
        barCodeArea.setProductoExistente(false);
        productosDropDown.filterByFather(proveedoresDropDown.getSelectedItem());
    }//GEN-LAST:event_noRadioActionPerformed

    private void yesRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesRadioActionPerformed
        panelProveedor.setEnabled(false);
        proveedoresDropDown.disable();
        barCodeArea.setProductoExistente(true);
        Proveedores local = new Proveedores();
        local.setCodigo(9999999);
        productosDropDown.filterByFather(local);
    }//GEN-LAST:event_yesRadioActionPerformed

    public void limpiar() {
        model.limpiar();
        barCodeArea.getCodigos().clear();
        productos.clear();
    }

    @Override
    public void updateBarCodeAreaObserver() {
        for (ProductosInventario producto : barCodeArea.getProductosInventario()) {
            productos.add(producto);
            model.agregarProducto(producto);
        }
        barCodeArea.getProductosInventario().clear();
    }

    public BasculaPanel getBasculaPanel() {
        return basculaPanel;
    }

    public void setBasculaPanel(BasculaPanel basculaPanel) {
        this.basculaPanel = basculaPanel;
    }

    public ProductosTableModel getModel() {
        return model;
    }

    public void setModel(ProductosTableModel model) {
        this.model = model;
    }

    public String getModoOperacion() {
        return modoOperacion;
    }

    public void setModoOperacion(String modoOperacion) {
        this.modoOperacion = modoOperacion;
    }

    public CustomDropDown getProveedoresDropDown() {
        return proveedoresDropDown;
    }

    public void setProveedoresDropDown(CustomDropDown proveedoresDropDown) {
        this.proveedoresDropDown = proveedoresDropDown;
    }

    public CustomDropDown getProductosDropDown() {
        return productosDropDown;
    }

    public void setProductosDropDown(CustomDropDown productosDropDown) {
        this.productosDropDown = productosDropDown;
    }

    public CustomDropDown getRepartidoresDropDown() {
        return repartidoresDropDown;
    }

    public void setRepartidoresDropDown(CustomDropDown repartidoresDropDown) {
        this.repartidoresDropDown = repartidoresDropDown;
    }

    public BarCodeArea getBarCodeArea() {
        return barCodeArea;
    }

    public void setBarCodeArea(BarCodeArea barCodeArea) {
        this.barCodeArea = barCodeArea;
    }

    public ProductoDAO getProductoDAO() {
        return productoDAO;
    }

    public void setProductoDAO(ProductoDAO productoDAO) {
        this.productoDAO = productoDAO;
    }

    public CustomCellRendered getCellRendered() {
        return cellRendered;
    }

    public void setCellRendered(CustomCellRendered cellRendered) {
        this.cellRendered = cellRendered;
    }

    public ProductosHasProveedoresDao getpHasPro() {
        return pHasPro;
    }

    public void setpHasPro(ProductosHasProveedoresDao pHasPro) {
        this.pHasPro = pHasPro;
    }

    public BasculaService getBasculaService() {
        return basculaService;
    }

    public void setBasculaService(BasculaService basculaService) {
        this.basculaService = basculaService;
    }

    public ProductosService getProductosService() {
        return productosService;
    }

    public void setProductosService(ProductosService productosService) {
        this.productosService = productosService;
    }

    public String getLetra() {
        return letra;
    }

    public void setLetra(String letra) {
        this.letra = letra;
    }

    public TransactionService getTransactionService() {
        return transactionService;
    }

    public void setTransactionService(TransactionService transactionService) {
        this.transactionService = transactionService;
    }

    public boolean isInventarioInicial() {
        return inventarioInicial;
    }

    public void setInventarioInicial(boolean inventarioInicial) {
        this.inventarioInicial = inventarioInicial;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelCodigoBarras;
    private javax.swing.JPanel PanelFinalizar;
    private javax.swing.JPanel PanelPeso;
    private javax.swing.JPanel PanelRepartidor;
    private javax.swing.JPanel Pesaje;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton eliminarCajaBtn;
    private javax.swing.JButton finalizarBtn;
    public javax.swing.JButton imprimirEtiquetaBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JRadioButton noRadio;
    private javax.swing.JPanel panelExistente;
    private javax.swing.JPanel panelProveedor;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JRadioButton yesRadio;
    // End of variables declaration//GEN-END:variables

}
